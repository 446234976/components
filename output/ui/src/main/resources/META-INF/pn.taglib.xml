<?xml version="1.0" encoding="UTF-8"?>

<facelet-taglib xmlns="http://java.sun.com/xml/ns/javaee"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd" version="2.0" id="output">
    <namespace>http://richfaces.org/output</namespace>
    <tag>
        <tag-name>dropDownMenu</tag-name>
        <component>
            <component-type>org.richfaces.DropDownMenu</component-type>
            <renderer-type>org.richfaces.DropDownMenuRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon/>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon/>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>direction</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>hideDelay</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>jointPoint</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon/>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>mode</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon/>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon/>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ongrouphide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ongroupshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onhide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon/>
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon/>
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon/>
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon/>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon/>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon/>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon/>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon/>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>popupWith</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showDelay</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>showEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon/>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon/>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon/>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>menuSeparator</tag-name>
        <component>
            <component-type>org.richfaces.MenuSeparator</component-type>
            <renderer-type>org.richfaces.MenuSeparatorRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon/>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>menuGroup</tag-name>
        <component>
            <component-type>org.richfaces.MenuGroup</component-type>
            <renderer-type>org.richfaces.MenuGroupRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon/>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon/>
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon/>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>direction</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>horizontalOffset</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>icon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconDisabled</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconFolder</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconFolderDisabled</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon/>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon/>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon/>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onhide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon/>
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon/>
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon/>
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon/>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon/>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon/>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon/>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon/>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon/>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon/>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon/>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon/>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>verticalOffset</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>    
	<tag>
        <tag-name>menuItem</tag-name>
        <component>
            <component-type>org.richfaces.MenuItem</component-type>
            <renderer-type>org.richfaces.MenuItemRenderer</renderer-type>
        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon/>
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon/>
            <name>actionExpression</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon/>
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon/>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon/>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>icon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconDisabled</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.</description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>label</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon/>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>mode</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon/>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon/>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon/>
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon/>
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon/>
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon/>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon/>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon/>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon/>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon/>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon/>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon/>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon/>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon/>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>toolbar</tag-name>
        <component>
            <component-type>org.richfaces.Toolbar</component-type>
            <renderer-type>org.richfaces.ToolbarRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon/>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>height</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
	    <attribute>
            <name>itemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemSeparator</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>width</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>toolbarGroup</tag-name>
        <component>
            <component-type>org.richfaces.ToolbarGroup</component-type>
            <renderer-type>org.richfaces.ToolbarGroupRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon/>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
   	    <attribute>
            <name>itemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemSeparator</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>location</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
    </tag>


    <tag>
        <tag-name>toggleControl</tag-name>
        <behavior>
            <behavior-id>org.richfaces.component.behavior.ToggleControl</behavior-id>
            <handler-class>org.richfaces.view.facelets.html.CustomBehaviorHandler</handler-class>
        </behavior>
    </tag>
    <tag>
        <tag-name>panel</tag-name>
        <component>
            <component-type>org.richfaces.Panel</component-type>
            <renderer-type>org.richfaces.PanelRenderer</renderer-type>
        </component>
    </tag>
    <tag>
        <tag-name>progressBar</tag-name>
        <component>
            <component-type>org.richfaces.ProgressBar</component-type>
            <renderer-type>org.richfaces.ProgressBarRenderer</renderer-type>
        </component>
    </tag>
    <tag>
        <tag-name>popupPanel</tag-name>
        <component>
            <description>JSF component class</description>
            <component-type>org.richfaces.PopupPanel</component-type>
            <renderer-type>org.richfaces.PopupPanelRenderer</renderer-type>
        </component>
        <attribute>
            <name>autosized</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon/>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>controlsClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>domElementAttachment</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>followByScroll</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>header</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>height</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>keepVisualState</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>left</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>maxHeight</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>maxWidth</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>minHeight</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>minWidth</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>modal</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>moveable</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>onbeforehide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onhide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskcontextmenu</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onresize</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>overlapEmbedObjects</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>resizeable</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>shadowDepth</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>shadowOpacity</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>show</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>top</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>trimOverlayedElements</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>visualOptions</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>width</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>zindex</name>
            <type>int</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>tabPanel</tag-name>
        <component>
            <component-type>org.richfaces.TabPanel</component-type>
            <renderer-type>org.richfaces.TabPanel</renderer-type>
        </component>
    </tag>
    <tag>
        <tag-name>tab</tag-name>
        <component>
            <component-type>org.richfaces.TabPanelItem</component-type>
            <renderer-type>org.richfaces.Tab</renderer-type>
        </component>
    </tag>

    <tag>
        <tag-name>panelMenuItem</tag-name>
        <component>
            <component-type>org.richfaces.PanelMenuItem</component-type>
            <renderer-type>org.richfaces.PanelMenuItem</renderer-type>
        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon/>
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon/>
            <name>actionExpression</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon/>
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description></description>
            <name>icon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>mode</name>
            <type>org.richfaces.PanelMenuMode</type>
        </attribute>
        <attribute>
            <description></description>
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>limitToList</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description></description>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>disabledClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>hoverClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>iconLeftClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>iconLeftDisabled</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>iconRightClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>iconRightDisabled</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onunselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onbeforeselect</name>
            <type>java.lang.String</type>
        </attribute>

    </tag>
    <tag>
        <tag-name>panelMenuGroup</tag-name>
        <component>
            <component-type>org.richfaces.PanelMenuGroup</component-type>
            <renderer-type>org.richfaces.PanelMenuGroup</renderer-type>

        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon/>
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon/>
            <name>actionExpression</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon/>
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description></description>
            <name>expanded</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>expandSingle</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>collapseEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>expandEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>bubbleSelection</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>iconLeftCollapsed</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>iconLeftExpanded</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>iconRightCollapsed</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>iconRightExpanded</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>changeExpandListener</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>icon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>mode</name>
            <type>org.richfaces.PanelMenuMode</type>
        </attribute>
        <attribute>
            <description></description>
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>limitToList</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description></description>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>oncollapse</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onexpand</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onswitch</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onbeforecollapse</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onbeforeexpand</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onbeforeswitch</name>
            <type>java.lang.String</type>
        </attribute>

    </tag>
    <tag>
        <tag-name>panelMenu</tag-name>
        <component>
            <component-type>org.richfaces.PanelMenu</component-type>
            <renderer-type>org.richfaces.PanelMenu</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.PanelMenuTagHandler</handler-class>
        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon/>
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon/>
            <name>actionExpression</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon/>
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description></description>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>expandEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>collapseEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>groupMode</name>
            <type>org.richfaces.PanelMenuMode</type>
        </attribute>
        <attribute>
            <description></description>
            <name>expandSingle</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemMode</name>
            <type>org.richfaces.PanelMenuMode</type>
        </attribute>
        <attribute>
            <description></description>
            <name>bubbleSelection</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>activeItem</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemChangeListener</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>limitToList</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description></description>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>width</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemDisableClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemIconLeft</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemIconRight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemDisableIconLeft</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemDisableIconRight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topItemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topItemDisableClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topItemIconLeft</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topItemIconRight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topItemDisableIconLeft</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topItemDisableIconRight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>groupClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>groupDisableClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>groupExpandIconLeft</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>groupExpandIconRight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>groupCollapseIconLeft</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>groupCollapseIconRight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>groupDisableIconLeft</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>groupDisableIconRight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topGroupClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topGroupDisableClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topGroupExpandIconLeft</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topGroupExpandIconRight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topGroupCollapseIconLeft</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topGroupCollapseIconRight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topGroupDisableIconLeft</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>topGroupDisableIconRight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>

    </tag>

    <tag>
        <tag-name>tooltip</tag-name>
        <component>
            <component-type>org.richfaces.Tooltip</component-type>
            <renderer-type>org.richfaces.Tooltip</renderer-type>

        </component>
        <attribute>
            <description></description>
            <name>for_</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>value</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>layout</name>
            <type>org.richfaces.TooltipLayout</type>
        </attribute>
        <attribute>
            <description></description>
            <name>attached</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>direction</name>
            <type>org.richfaces.TooltipDirection</type>
        </attribute>
        <attribute>
            <description></description>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>followMouse</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>hideDelay</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description></description>
            <name>hideEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>horizontalOffset</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description></description>
            <name>mode</name>
            <type>org.richfaces.TooltipMode</type>
        </attribute>
        <attribute>
            <description></description>
            <name>showDelay</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description></description>
            <name>showEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>verticalOffset</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description></description>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description></description>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>limitToList</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>zindex</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onhide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onbeforehide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onbeforeshow</name>
            <type>java.lang.String</type>
        </attribute>

    </tag>

    <tag>
        <tag-name>collapsiblePanel</tag-name>
        <component>
            <component-type>org.richfaces.CollapsiblePanel</component-type>
            <renderer-type>org.richfaces.CollapsiblePanel</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.CollapsiblePanelTagHandler</handler-class>
        </component>
        <attribute>
            <description></description>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <description></description>
            <name>expanded</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>header</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>limitToList</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description></description>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>toggleListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description></description>
            <name>bodyClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>headerControlClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onswitch</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onbeforeswitch</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>

    </tag>
    <tag>
        <description>
            Register a PanelToggleListener instance on the UIComponent
            associated with the closest parent UIComponent custom
            action.
        </description>
        <tag-name>panelToggleListener</tag-name>
        <handler-class>org.richfaces.view.facelets.html.PanelToggleListenerHandler</handler-class>
        <attribute>
            <description>
                Fully qualified Java class name of a
                PanelToggleListener to be created and registered.
            </description>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Value binding expression that evaluates to an object that
                implements org.richfaces.event.PanelToggleListener.
            </description>
            <name>binding</name>
            <required>false</required>
            <type>org.richfaces.event.PanelToggleListener</type>
        </attribute>
        <attribute>
            <description>
                &lt;p class="changed_added_2_0"&gt;If present, this attribute refers
                to the value of one of the exposed attached objects within the
                composite component inside of which this tag is nested.&lt;/p&gt;
            </description>
            <name>for</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>togglePanel</tag-name>
        <component>
            <component-type>org.richfaces.TogglePanel</component-type>
            <renderer-type>org.richfaces.TogglePanel</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.TogglePanelTagHandler</handler-class>
        </component>
        <attribute>
            <description></description>
            <name>cycledSwitching</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <description></description>
            <name>activeItem</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>limitToList</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemChangeListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>Long long text</description>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>binding description</description>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>I don't know maybe some thing strange</description>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onitemchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onbeforeitemchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>

    </tag>
    <tag>
        <description>
            Register a ItemChangeListener instance on the UIComponent
            associated with the closest parent UIComponent custom
            action.
        </description>
        <tag-name>itemChangeListener</tag-name>
        <handler-class>org.richfaces.view.facelets.html.ItemChangeListenerHandler</handler-class>
        <attribute>
            <description>
                Fully qualified Java class name of a
                ItemChangeListener to be created and registered.
            </description>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Value binding expression that evaluates to an object that
                implements org.richfaces.event.ItemChangeListener.
            </description>
            <name>binding</name>
            <required>false</required>
            <type>org.richfaces.event.ItemChangeListener</type>
        </attribute>
        <attribute>
            <description>
                &lt;p class="changed_added_2_0"&gt;If present, this attribute refers
                to the value of one of the exposed attached objects within the
                composite component inside of which this tag is nested.&lt;/p&gt;
            </description>
            <name>for</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>togglePanelItem</tag-name>
        <component>
            <component-type>org.richfaces.TogglePanelItem</component-type>
            <renderer-type>org.richfaces.TogglePanelItem</renderer-type>

        </component>
        <attribute>
            <description></description>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <description>Long long text</description>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>binding description</description>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>I don't know maybe some thing strange</description>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onenter</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onleave</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>

    </tag>

    <tag>
        <tag-name>accordion</tag-name>
        <component>
            <component-type>org.richfaces.Accordion</component-type>
            <renderer-type>org.richfaces.Accordion</renderer-type>

        </component>
        <attribute>
            <description></description>
            <name>cycledSwitching</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <description></description>
            <name>activeItem</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>limitToList</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description></description>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemChangeListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>Long long text</description>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>binding description</description>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>I don't know maybe some thing strange</description>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>width</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>height</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemHeaderClassActive</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemHeaderClassDisabled</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemHeaderClassInactive</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemContentClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>itemHeaderClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onitemchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onbeforeitemchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>

    </tag>

    <tag>
        <tag-name>accordionItem</tag-name>
        <component>
            <component-type>org.richfaces.AccordionItem</component-type>
            <renderer-type>org.richfaces.AccordionItem</renderer-type>
        </component>
        <attribute>
            <description></description>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>header</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <description>Long long text</description>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>binding description</description>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>I don't know maybe some thing strange</description>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description></description>
            <name>headerClassActive</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>headerClassDisabled</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>headerClassInactive</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>headerStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>contentClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onheaderclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onheaderdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onheadermousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onheadermousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onheadermouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onenter</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onleave</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description></description>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

</facelet-taglib>
