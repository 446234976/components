<?xml version="1.0" encoding="UTF-8"?>

<cdk:root xmlns="http://richfaces.org/cdk/xhtml-el"
	xmlns:cdk="http://richfaces.org/cdk/core"
	xmlns:c="http://richfaces.org/cdk/jstl/core"
	xmlns:cc="http://richfaces.org/cdk/jsf/composite"
	xmlns:javaee="http://java.sun.com/xml/ns/javaee">

	<cc:interface>
		<cdk:class>org.richfaces.renderkit.html.PopupPanelRenderer</cdk:class>
		<cdk:superclass>org.richfaces.renderkit.html.PopupPanelBaseRenderer</cdk:superclass>
		<cdk:component-family>org.richfaces.PopupPanel</cdk:component-family>
		<cdk:renderer-type>org.richfaces.PopupPanelRenderer</cdk:renderer-type>
	</cc:interface>

	<cc:implementation>
	<cdk:call expression="checkOptions(facesContext, component)" />
	<div id="#{clientId}" style="visibility: hidden;">
	<c:if test="#{component.attributes['modal']}">
	<div id="#{clientId}_shade" onclick="#{component.attributes['onmaskclick']}"
				ondblclick="#{component.attributes['onmaskdblclick']}"
				oncontextmenu="#{component.attributes['onmaskcontextmenu']}"
				onmouseup="#{component.attributes['onmaskmouseup']}"
				onmousedown="#{component.attributes['onmaskmousedown']}"
				onmousemove="#{component.attributes['onmaskmousemove']}"
				onmouseover="#{component.attributes['onmaskmouseover']}"
				onmouseout="#{component.attributes['onmaskmouseout']}" class="rf-pp-sh">
				<button class="rf-pp-b" id="#{clientId}FirstHref"></button>
				</div>

</c:if>
	<div id="#{clientId}_shadow" style="position: #{component.attributes['followByScroll'] ? 'fixed' : 'absolute'};" class="rf-pp-shw"/>
	<div id="#{clientId}_container" style="position: #{component.attributes['followByScroll'] ? 'fixed' : 'absolute'};" cdk:passThroughWithExclusions="id style class styleClass" class="rf-pp-cr #{component.attributes['styleClass']}">

		<c:if test="#{component.getFacet('header')!=null and component.getFacet('header').rendered}">
		<div id="#{clientId}_header" class="rf-pp-h #{component.attributes['headerClass']}" >
			<div id="#{clientId}_header_content" class="rf-pp-h-ct">
				<cdk:call expression="renderHeaderFacet(facesContext, component)"/>
			</div>
			</div>
		</c:if>
		<c:if test="#{component.attributes['header'] != null and (component.getFacet('header')==null or !component.getFacet('header').rendered)}">
		<div id="#{clientId}_header" class="rf-pp-h #{component.attributes['headerClass']}" >
			<div id="#{clientId}_header_content" class="rf-pp-h-ct">
				#{component.attributes['header']}
			</div>
			</div>
		</c:if>
		<c:if test="#{component.getFacet('controls')!=null and component.getFacet('controls').rendered}">
			<div id="#{clientId}_header_controls" class="rf-pp-h-cs #{component.attributes['controlsClass']}">
				<cdk:call expression="renderControlsFacet(facesContext, component)"/>
			</div>
	</c:if>
		
		<div id="#{clientId}_content_scroller" style="#{getStyleIfTrimmed(component)}" class="rf-pp-ct-sr">
			<div id="#{clientId}_content" class="rf-pp-ct" style="#{component.attributes['style']}">
				<cdk:call expression="renderChildren(facesContext, component)"/>
			</div>
		</div>
		<c:if test="#{component.attributes['resizeable']}">
		<div id="#{clientId}ResizerW" class="rf-pp-hr  rf-pp-hr-l"></div>
		<div id="#{clientId}ResizerE" class="rf-pp-hr rf-pp-hr-r"></div>
		<div id="#{clientId}ResizerN" class="rf-pp-hr rf-pp-hr-t"></div>

		<div id="#{clientId}ResizerS" class="rf-pp-hr rf-pp-hr-b"></div>
		<div id="#{clientId}ResizerNW" class="rf-pp-hr rf-pp-hr-tl"></div>
		<div id="#{clientId}ResizerNE" class="rf-pp-hr rf-pp-hr-tr"></div>
		<div id="#{clientId}ResizerSW" class="rf-pp-hr rf-pp-hr-bl"></div>
		<div id="#{clientId}ResizerSE" class="rf-pp-hr rf-pp-hr-br"></div>
		</c:if>
		
	</div>
</div>
<cdk:object type="java.lang.String" name="script" value="#{buildScript(facesContext, component)}" />
	<cdk:object type="java.lang.String" name="showScript" value="#{buildShowScript(facesContext, component)}" />
			<script type="text/javascript">	
				#{script}
			</script>
			<c:if test="#{showScript != null}">
			<script type="text/javascript">	
				#{showScript}
			</script>
			</c:if>


	</cc:implementation>
</cdk:root>