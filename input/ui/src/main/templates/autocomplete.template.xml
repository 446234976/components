<?xml version="1.0" encoding="UTF-8"?>

<cdk:root xmlns="http://jboss.org/schema/richfaces/cdk/xhtml-el" xmlns:cdk="http://jboss.org/schema/richfaces/cdk/core"
    xmlns:c="http://jboss.org/schema/richfaces/cdk/jstl/core" xmlns:cc="http://jboss.org/schema/richfaces/cdk/jsf/composite"
    xmlns:javaee="http://java.sun.com/xml/ns/javaee">

    <cc:interface>
        <cdk:class>org.richfaces.renderkit.html.AutocompleteRenderer</cdk:class>
        <cdk:superclass>org.richfaces.renderkit.AutocompleteRendererBase</cdk:superclass>
        <cdk:component-family>javax.faces.Input</cdk:component-family>
        <cdk:renderer-type>org.richfaces.AutocompleteRenderer
        </cdk:renderer-type>
        <cdk:renders-children>true</cdk:renders-children>
    </cc:interface>

    <cc:implementation>
    <cdk:object type="java.lang.Object" name="disabled" value="#{component.attributes['disabled']}" />
        <div id="#{clientId}" class="rf-au-field-width rf-au-field">
        	<input id="#{clientId}Value" name="#{clientId}Value" type="hidden" class="rf-au-font rf-au-input" />
            <div style="position : relative; overflow : hidden; text-align : left; padding-right : 21px;">
            	<input onclick="#{component.attributes['onclick']}"
				ondblclick="#{component.attributes['ondblclick']}"
				onmouseup="#{component.attributes['onmouseup']}"
				onmousedown="#{component.attributes['onmousedown']}"
				onmousemove="#{component.attributes['onmousemove']}"
				onblur="#{component.attributes['onblur']}"
				onfocus="#{component.attributes['onfocus']}"
				onmouseover="#{component.attributes['onmouseover']}"
				onmouseout="#{component.attributes['onmouseout']}"
				onkeyup="#{component.attributes['onkeyup']}"
				onkeydown="#{component.attributes['onkeydown']}"
				onkeypress="#{component.attributes['onkeypress']}" id="#{clientId}Input" value="#{component.attributes['value']}"  disabled="#{disabled}" name="#{clientId}" type="text" class="rf-au-font rf-au-input" />
                <c:if test="#{component.attributes['showButton']}">
                <c:if test="#{component.attributes['disabled']}">
                <div id="#{clientId}Button" class="rf-au-button">
                    <div class="rf-au-button-arrow"></div>
                </div>
                </c:if>
                <c:if test="#{!component.attributes['disabled']}">
                <div id="#{clientId}Button" class="rf-au-button">
                    <div class="rf-au-button-arrow"></div>
                </div>
                </c:if>
                </c:if>
            </div>

            <div onclick="#{component.attributes['onlistclick']}" 
				ondblclick="#{component.attributes['onlistdblclick']}"
				onmouseup="#{component.attributes['onlistmouseup']}"
				onmousedown="#{component.attributes['onlistmousedown']}"
				onmousemove="#{component.attributes['onlistmousemove']}"
				onmouseover="#{component.attributes['onlistmouseover']}"
				onmouseout="#{component.attributes['onlistmouseout']}"
				onblur="#{component.attributes['onlistblur']}"
				onfocus="#{component.attributes['onlistfocus']}"
				onkeyup="#{component.attributes['onlistkeyup']}"
				onkeydown="#{component.attributes['onlistkeydown']}"
				onkeypress="#{component.attributes['onlistkeypress']}"
				 id="#{clientId}List" class="rf-au-list-cord">

                <div class="rf-au-shadow">
                    <div class="rf-au-shadow-t"></div>
                    <div class="rf-au-shadow-l"></div>
                    <div class="rf-au-shadow-r"></div>
                    <div class="rf-au-shadow-b"></div>

                    <div class="rf-au-list-decoration">
                        <div class="rf-au-list-scroll rf-au-list-width rf-au-list-height">
                            <cdk:body>
                                <cdk:call expression="encodeItemsContainer(facesContext, component)"/>
                            </cdk:body>
                        </div>
                    </div>
                </div>
            </div>
            <script type="text/javascript">
                new RichFaces.ui.Autocomplete("#{clientId}",
                "#{clientId}Input", #{getScriptOptions(component)}
                 );
            </script>
        </div>
    </cc:implementation>

</cdk:root>
