<?xml version="1.0" encoding="UTF-8"?>
<!-- /* * JBoss, Home of Professional Open Source * Copyright 2010, Red Hat, 
	Inc. and individual contributors * by the @authors tag. See the copyright.txt 
	in the distribution for a * full listing of individual contributors. * * 
	This is free software; you can redistribute it and/or modify it * under the 
	terms of the GNU Lesser General Public License as * published by the Free 
	Software Foundation; either version 2.1 of * the License, or (at your option) 
	any later version. * * This software is distributed in the hope that it will 
	be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty 
	of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU * Lesser 
	General Public License for more details. * * You should have received a copy 
	of the GNU Lesser General Public * License along with this software; if not, 
	write to the Free * Software Foundation, Inc., 51 Franklin St, Fifth Floor, 
	Boston, MA * 02110-1301 USA, or see the FSF site: http://www.fsf.org. */ -->
<cdk:root xmlns="http://jboss.org/schema/richfaces/cdk/xhtml-el"
	xmlns:cdk="http://jboss.org/schema/richfaces/cdk/core" xmlns:cc="http://jboss.org/schema/richfaces/cdk/jsf/composite"
	xmlns:c="http://jboss.org/schema/richfaces/cdk/jstl/core" xmlns:xi="http://www.w3.org/2001/XInclude">
	<cc:interface>
		<cdk:class>org.richfaces.renderkit.html.CalendarRenderer</cdk:class>
		<cdk:superclass>org.richfaces.renderkit.CalendarRendererBase
		</cdk:superclass>
		<cdk:renderer-type>org.richfaces.CalendarRenderer</cdk:renderer-type>
	</cc:interface>
	<cc:implementation>
	<span id="#{clientId}">
		<span id="#{clientId}Popup"
			style="#{component.attributes['popup'] ? '' : 'display: none'}">
			<c:choose>
				<c:when test="#{!component.attributes['popup']}">
					<input id="#{clientId}InputDate" autocomplete="off" style="display:none"
						name="#{clientId}InputDate" value="#{this:getInputValue(facesContext,component)}"
						type="hidden" />
				</c:when>
				<c:otherwise>
					<input id="#{clientId}InputDate" name="#{clientId}InputDate"
						value="#{this:getInputValue(facesContext,component)}" type="#{component.attributes['showInput'] ? 'text' : 'hidden'}"
						disabled="#{component.attributes['disabled']}" accesskey="#{component.attributes['accesskey']}"
						maxlength="#{component.attributes['maxlength']}" size="#{component.attributes['inputSize']}"
						style="vertical-align: middle; #{component.attributes['inputStyle']}"
						class="rich-calendar-input #{component.attributes['inputClass']}"
						tabindex="#{component.attributes['tabindex']}"
						readonly="#{(!component.attributes['enableManualInput'] || component.attributes['readonly']) ? 'readonly' : ''}">
						<cdk:call expression="renderInputHandlers(facesContext, component);" />
					</input>
					<c:choose>
						<c:when test="#{isUseIcons(facesContext, component)}">
							<img id="#{clientId}PopupButton" alt=""
								class="rich-calendar-button #{component.attributes['buttonClass']}"
								accesskey="#{component.attributes['accesskey']}" style="vertical-align: middle"
								tabindex="#{component.attributes['tabindex']}" src="#{getButtonIcon(facesContext, component)}" />
						</c:when>
						<c:otherwise>
							<button type="button" id="#{clientId}PopupButton" name="#{clientId}PopupButton"
								style="vertical-align: middle"
								class="rich-calendar-button #{component.attributes['buttonClass']}"
								tabindex="#{component.attributes['tabindex']}" disabled="#{component.attributes['disabled']}">
								#{component.attributes['buttonLabel']}
								</button>
						</c:otherwise>
					</c:choose>
				</c:otherwise>
			</c:choose>
			<input type="hidden" id="#{clientId}InputCurrentDate" style="display:none"
				autocomplete="off" name="#{clientId}InputCurrentDate"
				value="#{getCurrentDateAsString(facesContext, component)}" />
		</span>
		<span style="display: none;" id="#{clientId}Content"></span>
		<span style="display: none;" id="#{clientId}Script">
			<script type="text/javascript">
				<cdk:call
					expression="buildAddLocaleScript(responseWriter, facesContext, component);" />
				<cdk:call
					expression="buildCalendarScript(responseWriter, facesContext, component);" />
			</script>
		</span>
		</span>
	</cc:implementation>
</cdk:root>
